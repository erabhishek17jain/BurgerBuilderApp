{"version":3,"sources":["assets/images/burger-logo.png","hoc/Auxs/Auxs.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","axios-orders.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/CheckOut/ContactData/ContactData.js","containers/CheckOut/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","components/About/About.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","auxs","props","children","logo","className","style","height","src","burgerLogo","alt","navigationItem","to","link","exact","activeClassName","navigationItems","drawerToggle","onClick","clicked","toolbar","drawerToggleClicked","backdrop","show","sideDrawer","attachedClasses","open","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","setState","sideDrawerToggleHandler","prevState","this","Component","BurgerIngredient","ingredient","type","burger","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","controls","buildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","nextProps","nextState","Auxs","modalClosed","transform","opacity","button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinued","spinner","withErrorHandler","WrappedComponent","axios","error","errorConfirmedHandler","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","instance","create","baseURL","INGREDIENT_PRICES","salad","cheese","paneer","bacon","totalPrice","purchasing","loading","addIngredientHandler","updatedCount","updatedIngredients","priceAddition","newPrice","updatePurchaseState","removeIngredientHandler","oldCount","priceDeduction","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","queryParams","push","encodeURIComponent","queryString","history","pathname","search","get","then","data","catch","sum","disabledInfo","orderSummary","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","validationMsg","inValid","shouldValidate","touched","valueType","elementType","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formElementIdentifier","order","orderData","post","rules","isValid","e","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","fromElememtArray","id","config","form","formElement","inputChangedHandler","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","query","URLSearchParams","location","entries","param","path","match","render","ingredientName","quantity","ingredientOutput","ig","display","border","padding","Number","parseFloat","orders","fetchedOrders","err","about","marginTop","App","component","BurgerBuilder","Orders","About","from","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","app","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.941f8521.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","const auxs = (props) => props.children;\r\n\r\nexport default auxs;","import React from 'react';\n\nimport burgerLogo from '../../assets/images/burger-logo.png';\nimport './Logo.css';\n\nconst logo = (props) => (\n    <div className=\"logo\" style={{height: props.height}}>\n        <img src={burgerLogo} alt=\"MyBurger\" />\n    </div>\n);\n\nexport default logo;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItem.css';\n\nconst navigationItem = ( props ) => (\n    <li className=\"navigationItem\">\n        <NavLink \n            to={props.link}\n            exact={props.exact}\n            activeClassName=\"active\">{props.children}</NavLink>\n    </li>\n);\n\nexport default navigationItem;","import React from 'react';\n\nimport './NavigationItems.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = () => (\n    <ul className=\"navigationItems\">\n        <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n        <NavigationItem link=\"/checkout\">Checkout</NavigationItem>\n        <NavigationItem link=\"/about\">About</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\n\nimport './DrawerToggle.css';\n\nconst drawerToggle = (props) => (\n    <div className=\"drawerToggle\" onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n);\n\nexport default drawerToggle;","import React from 'react';\n\nimport './Toolbar.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = ( props ) => (\n    <header className=\"toolbar\">\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className=\"logo\">\n            <Logo />\n        </div>\n        <nav className=\"desktopOnly\">\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './Backdrop.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className=\"backdrop\" onClick={props.clicked}></div> : null\n);\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './SideDrawer.css';\nimport Backdrop from '../../UI/Backdrop/Backdrop';\nimport Aux from '../../../hoc/Auxs/Auxs';\n\nconst sideDrawer = ( props ) => {\n    let attachedClasses = [\"sideDrawer\", \"close\"];\n    if (props.open) {\n        attachedClasses = [\"sideDrawer\", \"open\"];\n    }\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <Logo height=\"11%\" />\n            <nav>\n                <NavigationItems />\n            </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\n\nimport Aux from '../Auxs/Auxs';\nimport './Layout.css';\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar';\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer';\n\nclass Layout extends Component {\n    state = {\n        showSideDrawer: false\n    }\n\n    sideDrawerClosedHandler = () => {\n        this.setState( { showSideDrawer: false } );\n    }\n\n    sideDrawerToggleHandler = () => {\n        this.setState( ( prevState ) => {\n            return { showSideDrawer: !prevState.showSideDrawer };\n        } );\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar drawerToggleClicked={this.sideDrawerToggleHandler} />\n                <SideDrawer\n                    open={this.state.showSideDrawer}\n                    closed={this.sideDrawerClosedHandler} />\n                <main className=\"content\">\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n}\n\nexport default Layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './BurgerIngredient.css';\n\nclass BurgerIngredient extends Component {\n    render () {\n        let ingredient = null;\n\n        switch ( this.props.type ) {\n            case ( 'bread-bottom' ):\n                ingredient = <div className=\"breadBottom\"></div>;\n                break;\n            case ( 'bread-top' ):\n                ingredient = (\n                    <div className=\"breadTop\">\n                        <div className=\"seeds1\"></div>\n                        <div className=\"seeds2\"></div>\n                    </div>\n                );\n                break;\n            case ( 'paneer' ):\n                ingredient = <div className=\"paneer\"></div>;\n                break;\n            case ( 'cheese' ):\n                ingredient = <div className=\"cheese\"></div>;\n                break;\n            case ( 'bacon' ):\n                ingredient = <div className=\"bacon\"></div>;\n                break;\n            case ( 'salad' ):\n                ingredient = <div className=\"salad\"></div>;\n                break;\n            default:\n                ingredient = null;\n        }\n\n        return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n};\n\nexport default BurgerIngredient;","import React from 'react';\n\nimport './Burger.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = ( props ) => {\n    console.log(props);\n    let transformedIngredients = Object.keys( props.ingredients )\n        .map( igKey => {\n            return [...Array( props.ingredients[igKey] )].map( ( _, i ) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            } );\n        } )\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n    if (transformedIngredients.length === 0) {\n        transformedIngredients = <p>Please start adding ingredients!</p>;\n    }\n    return (\n        <div className=\"burger\">\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\nexport default burger;","import React from 'react';\n\nimport './BuildControl.css';\n\nconst buildControl = (props) => (\n    <div className=\"buildControl\">\n        <div className=\"label\">{props.label}</div>\n        <button \n            className=\"less\" \n            onClick={props.removed} \n            disabled={props.disabled}>Less</button>\n        <button \n            className=\"more\" \n            onClick={props.added}>More</button>\n    </div>\n);\n\nexport default buildControl;","import React from 'react';\n\nimport './BuildControls.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Paneer', type: 'paneer' },\n];\n\nconst buildControls = (props) => (\n    <div className=\"buildControls\">\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label}\n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]} />\n        ))}\n        <button \n            className=\"orderButton\"\n            disabled={!props.purchasable}\n            onClick={props.ordered}>ORDER NOW</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component } from 'react'\r\nimport './Modal.css';\r\nimport Auxs from '../../../hoc/Auxs/Auxs'\r\nimport Backdrop from '../Backdrop/Backdrop'\r\n\r\nclass Modal extends Component {\r\n  shouldComponentUpdate(nextProps, nextState){\r\n    return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    console.log('Modal updated')\r\n  }\r\n  render(){\r\n    return(\r\n      <Auxs>\r\n        <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\r\n        <div className=\"modal\" style={{\r\n            transform: this.props.show ? 'translateY(0)':'translateY(-100vh)',\r\n            opacity:this.props.show ? '1':'0'\r\n            }}>\r\n            {this.props.children}\r\n        </div>\r\n      </Auxs>\r\n   )\r\n  }\r\n} \r\n\r\nexport default Modal","import React from 'react';\n\nimport './Button.css';\n\nconst button = (props) => (\n    <button\n        disabled={props.disabled}\n        className={[\"button\", props.btnType].join(' ')}\n        onClick={props.clicked}>{props.children}</button>\n);\n\nexport default button;","import React, { Component } from 'react';\n\nimport Aux from '../../../hoc/Auxs/Auxs';\nimport Button from '../../UI/Button/Button';\n\nclass OrderSummary extends Component {\n    // This could be a functional component, doesn't have to be a class\n    componentWillUpdate() {\n        console.log('[OrderSummary] WillUpdate');\n    }\n\n    render () {\n        const ingredientSummary = Object.keys( this.props.ingredients )\n            .map( igKey => {\n                return (\n                    <li key={igKey}>\n                        <span style={{ textTransform: 'capitalize' }}>{igKey}</span>: {this.props.ingredients[igKey]}\n                    </li> );\n            } );\n\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price: {this.props.price.toFixed( 2 )}</strong></p>\n                <p>Continue to Checkout?</p>\n                <Button btnType=\"button danger\" clicked={this.props.purchaseCancelled}>CANCEL</Button>\n                <Button btnType=\"button success\" clicked={this.props.purchaseContinued}>CONTINUE</Button>\n            </Aux>\n        );\n    }\n}\n\nexport default OrderSummary;","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n    <div className=\"loader\">Loading...</div>\n);\n\nexport default spinner;","import React, { Component } from 'react';\n\nimport Modal from '../../components/UI/Modal/Modal';\nimport Aux from '../Auxs/Auxs';\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n        state = {\n            error: null\n        }\n\n        componentWillMount () {\n            this.reqInterceptor = axios.interceptors.request.use( req => {\n                this.setState( { error: null } );\n                return req;\n            } );\n            this.resInterceptor = axios.interceptors.response.use( res => res, error => {\n                this.setState( { error: error } );\n            } );\n        }\n\n        componentWillUnmount () {\n            axios.interceptors.request.eject( this.reqInterceptor );\n            axios.interceptors.response.eject( this.resInterceptor );\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState( { error: null } );\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal\n                        show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            );\n        }\n    }\n}\n\nexport default withErrorHandler;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-c8f5d.firebaseio.com/'\n});\n\nexport default instance;","import React, { Component } from 'react';\n\nimport Aux from '../../hoc/Auxs/Auxs';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport Spinner from '../../components/UI/Spinner/Spinner';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport axios from '../../axios-orders';\n\nconst INGREDIENT_PRICES = {\n    salad: 12,\n    cheese: 10,\n    paneer: 40,\n    bacon: 15\n};\n\nclass BurgerBuilder extends Component {\n    // constructor(props) {\n    //     super(props);\n    //     this.state = {...}\n    // }\n    state = {\n        ingredients: null,\n        totalPrice: 12,\n        purchasable: false,\n        purchasing: false,\n        loading: false,\n        error: false\n    }\n\n    componentDidMount () {\n        console.log(this.props);\n        axios.get( 'https://react-my-burger-c8f5d.firebaseio.com/ingredients.json' )\n            .then( response => {\n                this.setState( { ingredients: response.data } );\n            } )\n            .catch( error => {\n                this.setState( { error: true } );\n            } );\n    }\n\n    updatePurchaseState ( ingredients ) {\n        const sum = Object.keys( ingredients )\n            .map( igKey => {\n                return ingredients[igKey];\n            } )\n            .reduce( ( sum, el ) => {\n                return sum + el;\n            }, 0 );\n        this.setState( { purchasable: sum > 0 } );\n    }\n\n    addIngredientHandler = ( type ) => {\n        const oldCount = this.state.ingredients[type];\n        const updatedCount = oldCount + 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceAddition = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice + priceAddition;\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\n        this.updatePurchaseState( updatedIngredients );\n    }\n\n    removeIngredientHandler = ( type ) => {\n        const oldCount = this.state.ingredients[type];\n        if ( oldCount <= 0 ) {\n            return;\n        }\n        const updatedCount = oldCount - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updatedCount;\n        const priceDeduction = INGREDIENT_PRICES[type];\n        const oldPrice = this.state.totalPrice;\n        const newPrice = oldPrice - priceDeduction;\n        this.setState( { totalPrice: newPrice, ingredients: updatedIngredients } );\n        this.updatePurchaseState( updatedIngredients );\n    }\n\n    purchaseHandler = () => {\n        this.setState( { purchasing: true } );\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState( { purchasing: false } );\n    }\n\n    purchaseContinueHandler = () => {\n        // alert('You continue!');\n        \n        const queryParams = [];\n        for (let i in this.state.ingredients) {\n            queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.state.ingredients[i]));\n        }\n        queryParams.push('price=' + this.state.totalPrice);\n        const queryString = queryParams.join('&');\n        this.props.history.push({\n            pathname: '/checkout',\n            search: '?' + queryString\n        });\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for ( let key in disabledInfo ) {\n            disabledInfo[key] = disabledInfo[key] <= 0\n        }\n        let orderSummary = null;\n        let burger = this.state.error ? <p>Ingredients can't be loaded!</p> : <Spinner />;\n\n        if ( this.state.ingredients ) {\n            burger = (\n                <Aux>\n                    <h2>Create Your Tasty Burger</h2>\n                    <Burger ingredients={this.state.ingredients} />\n                    <BuildControls\n                        ingredientAdded={this.addIngredientHandler}\n                        ingredientRemoved={this.removeIngredientHandler}\n                        disabled={disabledInfo}\n                        purchasable={this.state.purchasable}\n                        ordered={this.purchaseHandler}\n                        price={this.state.totalPrice} />\n                </Aux>\n            );\n            orderSummary = <OrderSummary\n                ingredients={this.state.ingredients}\n                price={this.state.totalPrice}\n                purchaseCancelled={this.purchaseCancelHandler}\n                purchaseContinued={this.purchaseContinueHandler} />;\n        }\n        if ( this.state.loading ) {\n            orderSummary = <Spinner />;\n        }\n        // {salad: true, paneer: false, ...}\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nexport default withErrorHandler( BurgerBuilder, axios );","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport Button from '../../UI/Button/Button';\nimport './CheckoutSummary.css';\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className=\"checkoutSummary\">\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients}/>\n            </div>\n            <Button \n                btnType=\"button danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"button success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    );\n}\n\nexport default checkoutSummary;","import React from 'react'\r\nimport'./Input.css'\r\n\r\nconst input = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses =  ['inputElement'];\r\n    let validationMsg = '';\r\n    if(props.inValid && props.shouldValidate && props.touched){\r\n        inputClasses.push('invalid');\r\n        validationMsg = <p className=\"validationMsg\">Please enter a valid {props.valueType}</p>\r\n    }\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input \r\n            className={inputClasses.join(' ')} \r\n            {...props.elementConfig} value ={props.value}\r\n            onChange={props.changed}/>\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea \r\n            className={inputClasses.join(' ')} \r\n            {...props.elementConfig} value ={props.value}\r\n            onChange={props.changed}/>\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n            <select style={{width: \"100%\"}}\r\n                className={inputClasses.join(' ')} \r\n                value ={props.value}\r\n                onChange={props.changed}>\r\n                {props.elementConfig.options.map(option => (\r\n                    <option key={option.value} value={option.value}>\r\n                        {option.displayValue}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement = <input \r\n            className = {inputClasses.join(' ')} \r\n            {...props.elementConfig} value ={props.value}\r\n            onChange={props.changed}/>\r\n    }\r\n    return (\r\n        <div className=\"input\">\r\n            <label className=\"labels\"></label>\r\n            {inputElement}\r\n            {validationMsg}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default input","import React, { Component } from 'react';\n\nimport Button from '../../../components/UI/Button/Button';\nimport Spinner from '../../../components/UI/Spinner/Spinner';\nimport axios from '../../../axios-orders';\nimport './ContactData.css';\nimport Input from '../../../components/UI/Input/Input';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Zip code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 5,\n                    maxLength: 8\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'email',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options:[\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'}\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid:false,\n        loading: false\n    }\n\n    orderHandler = (event) => {\n        event.preventDefault();\n        this.setState({ loading: true });\n        const formData = {};\n        for(let formElementIdentifier in this.state.orderForm){\n            formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier];\n        }\n        const order = {\n            ingredients: this.props.ingredients,\n            price: this.props.price,\n            orderData: formData   \n        }\n        axios.post('/orders.json', order)\n            .then(response => {\n                this.setState({ loading: false });\n                this.props.history.push('/');\n            })\n            .catch(error => {\n                this.setState({ loading: false });\n            });\n    }\n\n    checkValidity(value, rules){\n        // debugger;\n        let isValid = true;\n        if(rules.required){\n            isValid = value !== '' && isValid; \n        }\n        if(rules.minLength){\n            console.log(value.length);\n            isValid = value.length >= rules.minLength && isValid;\n        }\n        if(rules.maxLength){\n            isValid = value.length <= rules.maxLength && isValid;\n        }\n        return isValid;\n    }\n\n    inputChangedHandler(e, inputIdentifier) {\n        const updatedOrderForm = {\n            ...this.state.orderForm\n        }\n        const updatedFormElement ={\n            ...updatedOrderForm[inputIdentifier]\n        } \n        updatedFormElement.value = e.target.value;\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement;\n        console.log(\"Data \" + updatedOrderForm);\n        let formIsValid = true;\n        for(let inputIdentifier in updatedOrderForm){\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\n        }\n        this.setState({orderForm: updatedOrderForm, formIsValid:formIsValid});\n        console.log(this.state);\n    }\n\n    render() {\n        const fromElememtArray = [];\n        for (let key in this.state.orderForm){\n            fromElememtArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n        let form = (\n            <form>\n                {fromElememtArray.map(formElement => (\n                    <Input \n                        key={formElement.id}\n                        elementType={formElement.config.elementType} \n                        elementConfig={formElement.config.elementConfig}\n                        value={formElement.config.value} \n                        inValid={!formElement.config.valid}\n                        shouldValidate={formElement.config.validation}\n                        touched={formElement.config.touched}\n                        changed={(e) => this.inputChangedHandler(e, formElement.id)}/>\n                ))}\n                <Button btnType=\"button success\" disabled={!this.state.formIsValid} clicked={this.orderHandler}>ORDER</Button>\n            </form>\n        );\n        if (this.state.loading) {\n            form = <Spinner />;\n        }\n        return (\n            <div className=\"contactData\">\n                <h4>Enter your Contact Data</h4>\n                {form}\n            </div>\n        );\n    }\n}\n\nexport default ContactData;","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\n\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData';\n\nclass Checkout extends Component {\n    state = {\n        ingredients: null,\n        price: 0\n    }\n\n    componentWillMount () {\n        const query = new URLSearchParams( this.props.location.search );\n        const ingredients = {};\n        let price = 0;\n        for ( let param of query.entries() ) {\n            // ['salad', '1']\n            if (param[0] === 'price') {\n                price = param[1];\n            } else {\n                ingredients[param[0]] = +param[1];\n            }\n        }\n        this.setState( { ingredients: ingredients, totalPrice: price } );\n    }\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace( '/checkout/contact-data' );\n    }\n\n    render () {\n        return (\n            <div>\n                <CheckoutSummary\n                    ingredients={this.state.ingredients}\n                    checkoutCancelled={this.checkoutCancelledHandler}\n                    checkoutContinued={this.checkoutContinuedHandler} />\n                <Route \n                    path={this.props.match.path + '/contact-data'} \n                    render={(props) => (<ContactData ingredients={this.state.ingredients} price={this.state.totalPrice} {...props} />)} />\n            </div>\n        );\n    }\n}\n\nexport default Checkout;","import React from 'react';\nimport './Order.css'\nconst order = ( props ) => {\n    const ingredients = [];\n    \n    for ( let ingredientName in props.ingredients ) {\n        ingredients.push(\n            {\n                name: ingredientName,\n                quantity: props.ingredients[ingredientName]\n            }\n        );\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span \n            style={{\n                textTransform: 'capitalize',\n                display: 'inline-block',\n                margin: '4px 8px',\n                border: '1px solid #ccc',\n                padding: '5px'\n                }}\n            key={ig.name}>{ig.name} ({ig.quantity})</span>;\n    });\n\n    return (\n        <div className=\"order\"> \n            <p>Ingredients:</p>\n            <p>{ingredientOutput}</p>\n            <p>Price (INR): <strong>{Number.parseFloat( props.price ).toFixed( 2 )}</strong></p>\n        </div>\n    );\n};\n\nexport default order;","import React, { Component } from 'react';\nimport Order from '../../components/Order/Order';\nimport axios from '../../axios-orders';\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\nimport './Orders.css';\n\nclass Orders extends Component {\n    state = {\n        orders: [],\n        loading: true\n    }\n\n    componentDidMount() {\n        axios.get('/orders.json')\n            .then(res => {\n                // convert obj into array \n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    });\n                }\n                console.log(fetchedOrders)\n                this.setState({loading: false, orders: fetchedOrders});\n            })\n            .catch(err => {\n                this.setState({loading: false});\n            });\n    }\n\n    render () {\n        return (\n            <div className=\"orders\">\n                {this.state.orders.map(order => (\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                ))}\n            </div>\n        );\n    }\n} \n\nexport default withErrorHandler(Orders, axios);","import React from 'react'\r\nimport './About.css'\r\nconst about = (props) => {\r\n  return(\r\n      <div style={{marginTop: '72px'}}>\r\n    <div className=\"about\">\r\n        <h3>Burger Builder</h3>\r\n        <h4>About App:</h4>\r\n        <p>Burger Builder App is basically used to create a virtual burger with the help of mentioned ingredients \r\n            and order it by filling our details.</p>\r\n            <p>Steps to Order your Burger:</p>\r\n            <ol>\r\n                <li>Create a burger with the help of mentioned ingredients.</li>\r\n                <li>Confirm you ingredients in burger and press continue.</li>\r\n                <li>View your burger final look, if its good then press Continue.</li>\r\n                <li>Now finally, fill your details (Name, Address, Email, Phone No. and Delivery Type) to Order.</li>\r\n                <li>Now click on Order to order your burger, We will reach you very soon to deliver it.</li>\r\n            </ol>\r\n            </div>\r\n            <div className=\"about\">\r\n        <h4>ReactJs concepts Used</h4>\r\n        <ul>\r\n            <li>Basis Fetures and Synax(ES6)</li>\r\n            <li>JSX and Components</li>\r\n            <li>Function and Class Components</li>\r\n            <li>Lifecycle Methods</li>\r\n            <li>Event Handling</li>\r\n            <li>Ajax/Http Call (axios)</li>\r\n            <li>Forms and its Validations</li>\r\n            <li>React Routing</li>\r\n        </ul>\r\n    </div>\r\n    </div>\r\n   )\r\n }\r\n\r\nexport default about","import React, { Component } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/CheckOut/Checkout';\nimport Orders from './containers/Orders/Orders';\nimport About from './components/About/About'\n\nclass App extends Component {\n  render () {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/\" exact component={BurgerBuilder} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/about\" component={About} />\n            <Redirect from=\"/\" to=\"/orders\" /> \n            {/* It not load component just change URL */}\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n);\n\nReactDOM.render( app, document.getElementById( 'root' ) );\nregisterServiceWorker();\n"],"sourceRoot":""}